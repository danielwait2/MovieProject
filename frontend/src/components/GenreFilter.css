/* GenreFilter.css */

/* Container for the entire filter */
.genre-filter {
    display: flex;
    flex-direction: column;
    width: 100%;
    font-family: Arial, sans-serif;
    position: relative;
}

/* Center the carousel container */
.genre-carousel {
    margin: 0 auto;
}

/* --- Overrides for react-slick --- */

/* 
  Make sure the slick list shows content that overflows (such as a scaled element)
  to prevent reflow of other slides when an element scales.
*/
.slick-list {
    margin: 0 10px;
    overflow: visible;
}

/* 
  Each slick slide should be inline-block with extra horizontal margin for spacing.
  Also, set overflow: visible so any scaling inside won't alter layout.
*/
.slick-slide {
    display: inline-block;
    margin: 0 10px; /* Increase this value for more spacing between slides */
    overflow: visible;
}

/* --- Genre Item Styles --- */

.genre-item label {
    display: block;
    min-width: 150px; /* Set this to the desired minimum width */
    font-size: 1rem;
    color: #d9d9d9;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin: 0 !important;
    padding: 10px;
    border-radius: 8px;
    transition: transform 0.2s ease;
    transform-origin: center center;
}

/*
  Using display: block on the label to ensure it occupies its own space.
  Set a transform-origin so that scaling occurs from the center.
  The transition ensures a smooth scaling effect.
*/
.genre-item label {
    display: block;
    font-size: 1rem;
    color: #d9d9d9;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin: 0 !important;
    padding: 10px;
    border-radius: 8px;
    transition: transform 0.2s ease;
    transform-origin: center center;
}

/*
  On hover, the label scales up slightly.
  Because its container (and the slick slide container) allow visible overflow,
  the scaled element overlays its neighbors instead of pushing them.
*/
.genre-item:hover label {
    transform: scale(1.05);
}

/* --- Button Visual Styles --- */

.btn-filter {
    background-color: rgba(217, 217, 217, 0.1) !important;
    color: #d9d9d9;
}

.btn-check:checked + .btn-filter {
    background-color: rgba(0, 0, 0, 0.4) !important;
    font-weight: bold;
    border: 0;
}

.btn-check:hover + .btn-filter {
    font-weight: bold;
    color: #d9d9d9 !important;
}

/* --- Navigation Button Styles (Optional) --- */

.carousel-nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
}

.carousel-prev {
    left: 0;
}

.carousel-next {
    right: 0;
}

/* --- Legacy .genre-list Styles (if used outside slick) --- */

.genre-list {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto; /* Carousel scrolls horizontally */
    width: 100%;
    max-width: 100%; /* Does not exceed the viewport width */
    scroll-behavior: smooth;
    gap: 15px; /* Keeps consistent spacing between items */
    padding: 15px 0;
    scrollbar-width: none;
    overscroll-behavior-x: contain; /* Or try auto/none if needed */
    -webkit-overflow-scrolling: touch;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.genre-list::-webkit-scrollbar {
    display: none;
}
