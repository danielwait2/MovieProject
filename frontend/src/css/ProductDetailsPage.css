/* 1) Container: pinned near top, dark fallback background */
.product-details {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    width: 100%;
    min-height: 100vh;
    margin: 0;
    padding: 0;
    background-color: #121212;
    color: #fff;
    overflow: auto; 
}

/* 2) Wider/narrower wrapper if desired (adjust width, max-width) */
.hero-wrapper {
    position: relative;
    width: 90%;         /* bigger than 80% for a wider poster */
    max-width: 1000px;  /* allow up to 1000px wide on large screens */
    margin: 0 auto;
    box-sizing: border-box;
    min-height: 100vh;  /* ensure it spans full viewport height */
}

/* 3) Hero background with "cover" to fill the container 
   (makes the image bigger but may crop top/bottom if aspect ratio doesn't match) */
.hero {
    position: relative;
    width: 100%;
    min-height: 100vh;    /* at least full screen height */
    background-position: 50% 10%;
    background-size: cover;   /* bigger = fill container, can crop edges */
    background-repeat: no-repeat;
}

/* 4) Fade starts earlier (10%) so top is partially dark; 
   mostly black by the bottom (could do 80% or 90% if you want a larger fade). */
.hero::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0.2) 10%,  /* start fade at 10% from top */
        rgba(0, 0, 0, 0.8) 100%  /* much darker by the bottom */
    );
    pointer-events: none;
}

/* 5) Centered content (or near bottom). 
   If you prefer the text in the lower portion, use 'flex-end'. 
   If you want it in the middle, use 'center'. */
.centered-content {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; /* keeps things centered vertically, but with padding offset */
    width: 100%;
    height: 100%;
    padding: 15rem 2rem 2rem; /* top = 6rem, horizontal = 2rem, bottom = 2rem */
    box-sizing: border-box;
    text-align: center;
}

/* "X" in top-right corner of the .hero-wrapper */
.back-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: transparent;
    border: none;
    color: #fff;
    cursor: pointer;
    z-index: 10;
    transition: transform 0.2s ease;
}
.back-button:hover {
    transform: scale(1.1);
}

/* Title, meta, cast, etc. */
.centered-content h1 {
    font-size: 3rem;
    font-weight: bold;
    margin-bottom: 1rem;
}

.meta-row {
    display: inline-flex;
    gap: 0.75rem;
    margin-bottom: 1rem;
    font-size: 0.9rem;
    color: #ccc;
}
.meta-label {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    white-space: nowrap;
}

.cast-text {
    font-size: 1rem;
    line-height: 1.4;
    color: #ccc;
    margin-bottom: 1rem;
    opacity: 0.8;
}

.description-text {
    font-size: 1.3rem;
    line-height: 1.6;
    color: #ddd;
    margin-bottom: 1.5rem;
}

/* Play button + rating stars */
.action-buttons {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-top: 1rem;
}
.btn-danger.action-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background-color: #e50914;
    border: none;
    cursor: pointer;
    padding: 0.75rem 1.5rem;
    font-size: 1.25rem;
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out;
}
.btn-danger.action-button:hover {
    background-color: #f40612;
}

.rating-scale {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}
.star {
    cursor: pointer;
    transition: transform 0.2s ease;
}
.star:hover {
    transform: scale(1.1);
}

